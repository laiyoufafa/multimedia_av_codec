# Copyright (C) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/multimedia/av_codec/config.gni")

ohos_static_library("av_codec_audio_ffmpeg_codec") {
  cflags = [
    "-std=c++17",
    "-fno-rtti",
    "-fno-exceptions",
    "-Wall",
    "-fno-common",
    "-fstack-protector-strong",
    "-Wshadow",
    "-FPIC",
    "-FS",
    "-O2",
    "-D_FORTIFY_SOURCE=2",
    "-fvisibility=hidden",
    "-Wformat=2",
    "-Wfloat-equal",
    "-Wdate-time",
    "-Werror",
    "-Wno-deprecated-declarations",
    "-Wextra",
    "-Wimplicit-fallthrough",
    "-Wsign-compare",
    "-Wunused-parameter",
  ]

  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  include_dirs = [
    "$av_codec_root_dir/interfaces/inner_api/native",
    "$av_codec_root_dir/interfaces/kits/c",
    "$av_codec_root_dir/services/dfx/include",
    "$av_codec_root_dir/services/engine/base/include",
    "$av_codec_root_dir/services/engine/codec/include/audio",
    "$av_codec_root_dir/services/engine/codec/include/audio/decoder",
    "$av_codec_root_dir/services/engine/codec/include/audio/encoder",
    "$av_codec_root_dir/services/engine/factory",
    "$av_codec_root_dir/services/utils/include",
    "$av_codec_root_dir/services/engine/common/include",
    "//foundation/graphic/graphic_2d/frameworks/surface/include",
    "//commonlibrary/c_utils/base/include",
    "//base/hiviewdfx/hisysevent/interfaces/native/innerkits/hisysevent/include",
    "//third_party/ffmpeg",

    # "$av_codec_root_dir/services/engine/codec/include/audio/encoder",
  ]

  sources = [
    "$av_codec_root_dir/services/engine/codec/audio/audio_buffer_info.cpp",
    "$av_codec_root_dir/services/engine/codec/audio/audio_buffers_manager.cpp",
    "$av_codec_root_dir/services/engine/codec/audio/audio_codec_worker.cpp",
    "$av_codec_root_dir/services/engine/codec/audio/audio_ffmpeg_adapter.cpp",
    "$av_codec_root_dir/services/engine/codec/audio/decoder/audio_ffmpeg_aac_decoder_plugin.cpp",
    "$av_codec_root_dir/services/engine/codec/audio/decoder/audio_ffmpeg_decoder_plugin.cpp",
    "$av_codec_root_dir/services/engine/codec/audio/decoder/audio_ffmpeg_flac_decoder_plugin.cpp",
    "$av_codec_root_dir/services/engine/codec/audio/decoder/audio_ffmpeg_mp3_decoder_plugin.cpp",
    "$av_codec_root_dir/services/engine/codec/audio/decoder/audio_ffmpeg_vorbis_decoder_plugin.cpp",
    "$av_codec_root_dir/services/engine/codec/audio/encoder/audio_ffmpeg_aac_encoder_plugin.cpp",
    "$av_codec_root_dir/services/engine/codec/audio/encoder/audio_ffmpeg_encoder_plugin.cpp",
    "$av_codec_root_dir/services/engine/codec/audio/encoder/audio_ffmpeg_flac_encoder_plugin.cpp",
  ]

  deps = [
    "$av_codec_root_dir/services/engine/base:av_codec_codec_base",
    "$av_codec_root_dir/services/engine/common:av_codec_engine_common",
    "//third_party/ffmpeg:libohosffmpeg",
  ]

  public_deps = [
    "$av_codec_root_dir/services/dfx:av_codec_service_dfx",
    "$av_codec_root_dir/services/utils:av_codec_format",
    "$av_codec_root_dir/services/utils:av_codec_service_utils",
    "//commonlibrary/c_utils/base:utils",
    "//third_party/bounds_checking_function:libsec_static",
  ]

  external_deps = [
    "c_utils:utils",
    "graphic_standard:surface",
    "hisysevent_native:libhisysevent",
    "hitrace_native:hitrace_meter",
    "hiviewdfx_hilog_native:libhilog",
  ]

  subsystem_name = "multimedia"
  part_name = "av_codec"
}
