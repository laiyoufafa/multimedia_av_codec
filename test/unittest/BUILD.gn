# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/multimedia/av_codec/config.gni")

AV_CODE_ROOT_DIR = "$av_codec_root_dir"
module_output_path = "av_codec"

av_codec_unittest_include_dirs = [
    "$AV_CODE_ROOT_DIR/interfaces/inner_api/native",
    "$AV_CODE_ROOT_DIR/interfaces/interfaces/inner_api/native",
]

av_codec_unittest_cflags = [
  "-std=c++17",
  "-fno-rtti",
  "-fno-exceptions",
  "-Wall",
  "-fno-common",
  "-fstack-protector-strong",
  "-Wshadow",
  "-FPIC",
  "-FS",
  "-O2",
  "-D_FORTIFY_SOURCE=2",
  "-fvisibility=hidden",
  "-Wformat=2",
  "-Wdate-time",
  "-Werror",
  "-Wextra",
  "-Wimplicit-fallthrough",
  "-Wsign-compare",
  "-Wunused-parameter",
]

##################################################################################################################
ohos_unittest("av_video_unit_test") {
    module_out_path = module_output_path
    include_dirs = av_codec_unittest_include_dirs
    include_dirs += [
        "./",
        "//third_party/ffmpeg",
        "//commonlibrary/c_utils/base/include",
        "//base/startup/init/interfaces/innerkits/include/syspara",
        "//foundation/graphic/graphic_2d/interfaces/inner_api",
        "$av_codec_root_dir/interfaces/kits/c",
        "$av_codec_root_dir/services/engine/common/include",
        "$av_codec_root_dir/services/engine/codec/include/video",
        "$av_codec_root_dir/services/engine/base/include",
        "$av_codec_root_dir/services/utils/include",
    ]

    cflags = av_codec_unittest_cflags

    cflags_cc = cflags

    public_configs = [
    ]


    if (multimedia_av_codec_support_test) {
        sources = [
            "./video_test/fcodec_unit_test.cpp",
        ]
    }

    public_deps = [
        "$av_codec_root_dir/services/engine/codec/video:av_codec_video_ffmpeg_codec",
    ]

    resource_config_file = "$av_codec_root_dir/test/unittest/resources/ohos_test.xml"
}

##################################################################################################################
ohos_unittest("av_audio_unit_test") {
    module_out_path = module_output_path
    include_dirs = av_codec_unittest_include_dirs
    include_dirs += [
        "./",
        "//third_party/ffmpeg",
        "//commonlibrary/c_utils/base/include",
        "//base/startup/init/interfaces/innerkits/include/syspara",
        "//foundation/graphic/graphic_2d/frameworks/surface/include",
        "$av_codec_root_dir/interfaces/kits/c",
        "$av_codec_root_dir/services/engine/common/include",
        "$av_codec_root_dir/services/engine/base/include",
        "$av_codec_root_dir/services/utils/include",
        "$av_codec_root_dir/services/engine/codec/include/audio",
        "$av_codec_root_dir/services/engine/factory",
    ]

    cflags = av_codec_unittest_cflags

    cflags_cc = cflags

    public_configs = [
    ]

    if (multimedia_av_codec_support_test) {
        sources = [
            "./audio_test/audio_decoder_unit_test.cpp",
        ]
    }

    deps = [
        "$av_codec_root_dir/interfaces/inner_api/native:av_codec_client",
        "$av_codec_root_dir/services/services:av_codec_service",
        "$av_codec_root_dir/services/utils:av_codec_format",
        "$av_codec_root_dir/interfaces/kits/c:capi_packages",
        "$av_codec_root_dir/services/engine/codec/audio:av_codec_audio_ffmpeg_codec",
        "$av_codec_root_dir/services/services:av_codec_service",
    ]

    external_deps = [
        "graphic_standard:surface"
    ]

    resource_config_file = "$av_codec_root_dir/test/unittest/resources/ohos_test.xml"
}