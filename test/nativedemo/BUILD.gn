# Copyright (C) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/multimedia/av_codec/config.gni")

ohos_executable("av_codec_demo") {
  include_dirs = [
    "//foundation/multimedia/av_codec/test/nativedemo/avmuxer",
    "//foundation/multimedia/av_codec/interfaces/kits/c",
    "//foundation/multimedia/av_codec/interfaces/inner_api/native",
    "//foundation/multimedia/av_codec/services/services/factory",
    "//foundation/multimedia/av_codec/services/engine/plugin/core",
    "//foundation/multimedia/av_codec/services/engine/plugin/interface",
    "//foundation/multimedia/av_codec/services/dfx/include",
    "//foundation/multimedia/av_codec/services/utils/include",
    "./av_codec_audio",
    "./audio_demo",
    "./include",
  ]

  cflags = [
    "-Wall",
    "-fno-rtti",
    "-fno-exceptions",
    "-fno-common",
    "-fstack-protector-strong",
    "-Wshadow",
    "-FPIC",
    "-FS",
    "-O2",
    "-D_FORTIFY_SOURCE=2",
    "-fvisibility=hidden",
    "-Wformat=2",
    "-Wdate-time",
    "-Werror",
    "-Wextra",
    "-Wimplicit-fallthrough",
    "-Wsign-compare",
    "-Wunused-parameter",
    "-Wno-deprecated-declarations",
  ]

  cflags_cc = cflags
  cflags_cc += ["-std=c++17"]

  sources = [
    "//foundation/multimedia/av_codec/test/nativedemo/av_codec_demo.cpp",
    "//foundation/multimedia/av_codec/test/nativedemo/avmuxer/avmuxer_demo_base.cpp",
    "//foundation/multimedia/av_codec/test/nativedemo/avmuxer/avmuxer_demo.cpp",
    "//foundation/multimedia/av_codec/test/nativedemo/avmuxer/avmuxer_engine_demo.cpp",
    "//foundation/multimedia/av_codec/test/nativedemo/avmuxer/avmuxer_ffmpeg_demo.cpp",
    "//foundation/multimedia/av_codec/test/nativedemo/avmuxer/avmuxer_demo_common.c",
    "//foundation/multimedia/av_codec/test/nativedemo/avmuxer/native_avmuxer_demo.c",
    "./audio_demo/avcodec_audio_encoder_inner_demo.cpp",
    "./audio_demo/avcodec_audio_decoder_demo.cpp",
    "./audio_demo/avcodec_audio_encoder_demo.cpp"
  ]

  deps = [
    "//foundation/multimedia/av_codec/interfaces/kits/c:native_av_codec_avmuxer",
    "//foundation/multimedia/av_codec/interfaces/inner_api/native:av_codec_client",
    "//foundation/multimedia/av_codec/services/services:av_codec_service",
    "//foundation/multimedia/av_codec/services/utils:av_codec_format",
    "//foundation/multimedia/av_codec/interfaces/kits/c:capi_packages"
  ]

  external_deps = [
    "c_utils:utils",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
  ]
  install_enable = false

  part_name = "av_codec"
  subsystem_name = "multimedia"
}
